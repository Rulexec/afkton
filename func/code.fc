;; Replies with all balance if no messages are received in last 24 hours

() recv_internal(cell message, slice in_msg) impure {
    slice s = message.begin_parse();
    s~skip_bits(4);
    (_, slice addr) = load_msg_addr(s);

    slice data = get_data().begin_parse();
    int prev_time = data.preload_uint(32);
    int curr_time = now();

    if (prev_time == 0) {
        prev_time = curr_time;
    }

    cell new_data = begin_cell()
        .store_uint(curr_time, 32)
        .end_cell();

    set_data(new_data);

    if (curr_time - prev_time >= 1 * 60 * 60) {
        ;; message$_ {X:Type} info:CommonMsgInfo
        ;;  init:(Maybe (Either StateInit ^StateInit))
        ;;  body:(Either X ^X) = Message X;

        ;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
        ;;  src:MsgAddressInt dest:MsgAddressInt 
        ;;  value:CurrencyCollection ihr_fee:Grams fwd_fee:Grams
        ;;  created_lt:uint64 created_at:uint32 = CommonMsgInfo;

        cell msg = begin_cell()
            .store_uint(16, 1 + 3 + 2)
            .store_slice(addr)
            ;; currencies$_ grams:Grams other:ExtraCurrencyCollection = CurrencyCollection;
            ;; extra_currencies$_ dict:(HashmapE 32 (VarUInteger 32)) = ExtraCurrencyCollection;
            .store_grams(0)
            ;; dict + ihr_fee + fwd_fee + created_lt + created_at + init:nothing + body:left
            ;; + 0:32 + "epic win"
            .store_uint(0x657069632077696e, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 32 + 64)
            .end_cell();

        send_raw_message(msg, 128);
    }
}

() recv_external() impure {
    ;; ignore external messages
}

;; Get methods

int get_last_date() method_id {
    return get_data().begin_parse().preload_uint(32);
}
